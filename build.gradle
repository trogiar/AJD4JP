/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.13/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

// AJD4JPのバージョン情報
ext {
    ajd4jpVersion = '8.0.2.2021'
    ajd4jpAuthor = 'Akira Terasaki'
    ajd4jpTarName = "ajd4jp-${ajd4jpVersion}"
    ajd4jpJarName = "${ajd4jpTarName}.jar"
    ajd4jpCrtName = "ajd4jp.jar"
}

// ディレクトリ設定
def srcDir = 'ajd4jp'
def jarDir = 'bin'
def javadocDir = 'docs/javadoc'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {}

// ソースセットの設定
sourceSets {
    main {
        java.srcDirs = [srcDir]
        resources.includes = ['LICENSE']
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

// ソースコードのエンコーディングをUTF-8に設定
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// Version.javaの生成タスク
task generateVersionJava {
    def versionJavaFile = file("${srcDir}/Version.java")
    def templateFile = file('template/Version.java')
    
    def version = project.ext.ajd4jpVersion
    def author = project.ext.ajd4jpAuthor
    
    inputs.property('version', version)
    inputs.property('author', author)
    inputs.file(templateFile)
    outputs.file(versionJavaFile)
    
    doLast {
        // ファイルを明示的にUTF-8として読み込む
        def template = templateFile.getText('UTF-8')
        def versionJava = template.replace('@@@ver', version)
                                  .replace('@@@auth', author)
        // ファイルを明示的にUTF-8として書き込む
        versionJavaFile.setText(versionJava, 'UTF-8')
    }
}

// コンパイル前にVersion.javaを生成
compileJava.dependsOn generateVersionJava

// JARファイルの設定
jar {
    destinationDirectory = file("${jarDir}")
    archiveFileName = project.ext.ajd4jpJarName

    from('.'){
        include 'LICENSE'
    }
    
    manifest {
        attributes(
            'Extension-Name': 'ajd4jp',
            'Specification-Title': 'AJD4JP DB Library',
            'Specification-Version': project.ext.ajd4jpVersion,
            'Specification-Vendor': project.ext.ajd4jpAuthor,
            'Implementation-Title': 'ajd4jp',
            'Implementation-Version': project.ext.ajd4jpVersion,
            'Implementation-Vendor': project.ext.ajd4jpAuthor,
            'Sealed': 'true'
        )
    }
}

// ソースアーカイブ作成タスク
task createSourceArchive(type: Tar) {
    dependsOn jar
    
    archiveFileName = "${project.ext.ajd4jpTarName}.src.tar.gz"
    destinationDirectory = file(jarDir)
    compression = Compression.GZIP
    
    into(project.ext.ajd4jpTarName) {
        from('.') {
            include 'LICENSE'
            include 'build.gradle'
            include 'settings.gradle'
            include 'gradle.properties'
            include "${srcDir}/**"
            include 'template/**'
        }
    }
}

// Javadoc設定
javadoc {
    destinationDir = file(javadocDir)
    options {
        encoding = 'UTF-8'
        charSet = 'UTF-8'
        docEncoding = 'UTF-8'
        locale = 'ja_JP'
        windowTitle = "AJD4JP ${project.ext.ajd4jpVersion} API"
        overview = 'template/overview.html'
        docTitle = "AJD4JP ${project.ext.ajd4jpVersion} API 仕様"
        
        // HTMLタグとエンティティを許可するオプション
        addStringOption('Xdoclint:none', '-quiet')
    }
    
    source = sourceSets.main.allJava
    excludes = ['ajd4jp/util/**', 'ajd4jp/orrery/tool/**']
    
    options.links = ['https://docs.oracle.com/javase/jp/8/docs/api/']
}

// ビルドタスク
task buildAjd4jp {
    dependsOn jar, createSourceArchive, javadoc
    description = 'AJD4JPのビルド処理を実行します'
}

// クリーンタスクの拡張
clean {
    delete jarDir
    delete javadocDir
}
